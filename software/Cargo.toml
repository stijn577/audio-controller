[package]
name = "shared-data"
version = "0.1.0"
edition = "2021"

[dependencies]
# serialization must be supported on both ends (client and server)
serde = { version = "1.0.203", default-features = false, features = [
    "alloc",
    "derive",
] }
ciborium = { version = "0.2.2", default-features = false }

# one of these is for std, the other for no_std -> optional = true
thiserror = { version = "1.0.61", optional = true }
thiserror-no-std = { version = "2.0.2" }

# these codes are only used to parse the messaging on the server side, so it is optional and enabled with std flag
inputbot = { version = "0.6.0", optional = true }

# tokio for async functionality on server side
tokio = { version = "1.38.0", features = ["full"], optional = true }

# client side logging (on the controller)
defmt = { version = "0.3.8", features = ["alloc"], optional = true }
# logging on the server side (on the computer)
log = { version = "0.4.21", features = ["std", "serde"], optional = true }

# heapless for heapless datastructures that function a lot like heap-allocated ones
heapless = { version = "0.8.0", features = ["serde"] }

# bmp imaging libraries, might become unecessary based on what display is used
embedded-graphics = { version = "0.8.1", optional = true }
tinybmp = "0.6.0"

embassy-stm32 = { version = "0.1.0", optional = true }
embassy-usb = { version = "0.2.0", optional = true }

[workspace]
members = ["client", "server"]

[features]
# enable features for std environment (server PC)
std = ["dep:thiserror", "dep:inputbot", "dep:tokio", "dep:log"]
# defmt includes so we can print stuff (needs to be behind this feature otherwise any defmt symbols are included in std and defmt doesn't support x86-64)
embassy = ["dep:embassy-usb", "dep:embassy-stm32"]
defmt = [
    "dep:defmt",
    "heapless/defmt-03",
    "embedded-graphics/defmt",
    "embassy-usb/defmt",
]
# feature flag to enabled logging in general
logging = []
